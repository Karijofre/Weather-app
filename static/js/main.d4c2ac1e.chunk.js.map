{"version":3,"sources":["components/Header.jsx","components/Formulario.jsx","components/Clima.jsx","components/Error.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","titulo","className","href","Formulario","busqueda","setBusqueda","setConsultar","useState","error","setError","ciudad","pais","handlerChange","e","target","name","value","onSubmit","preventDefault","trim","type","id","onChange","htmlFor","Clima","resultado","main","kelvin","parseFloat","temp","toFixed","temp_max","temp_min","Error","mensaje","App","component","consultar","setResultado","useEffect","a","url","fetch","respuesta","json","response","cod","consultarApi","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAiBeA,EAfA,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACb,OACI,8BACI,qBAAKC,UAAW,kCAAhB,SACI,mBAAGC,KAAK,KAAKD,UAAW,aAAxB,SAAsCD,S,cC8EvCG,EAjFI,SAAC,GAA2C,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,YAAaC,EAAkB,EAAlBA,aAExC,EAAyBC,oBAAS,GAAlC,mBAAMC,EAAN,KAAaC,EAAb,KAIOC,EAAgBN,EAAhBM,OAAQC,EAAQP,EAARO,KAITC,EAAgB,SAAAC,GAAC,OAEnBR,EAAY,2BACLD,GADI,kBAENS,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAgBlC,OACI,uBAAMC,SAdgB,SAAAJ,GAClBA,EAAEK,iBAGmB,KAAlBR,EAAOS,QAAgC,KAAfR,EAAKQ,QAIhCV,GAAS,GACTH,GAAa,IAJTG,GAAS,IASjB,UACKD,GAAS,mBAAGP,UAAW,eAAd,qCACV,sBAAKA,UAAW,sBAAhB,UACI,uBACImB,KAAK,OACLL,KAAO,SACPM,GAAK,SACLL,MAAQN,EACRY,SAAWV,IAEf,uBAAOW,QAAQ,SAAf,sBAGJ,sBAAKtB,UAAW,sBAAhB,UACI,yBACIc,KAAK,OACLM,GAAG,OACHL,MAAQL,EACRW,SAAWV,EAJf,UAMI,wBAAQI,MAAM,GAAd,oCACA,wBAAQA,MAAM,KAAd,2BACA,wBAAQA,MAAM,KAAd,oBACA,wBAAQA,MAAM,KAAd,uBACA,wBAAQA,MAAM,KAAd,sBACA,wBAAQA,MAAM,KAAd,wBACA,wBAAQA,MAAM,KAAd,mBACA,wBAAQA,MAAM,KAAd,wBAGJ,qBAAKf,UAAW,sBAAhB,SACI,uBACImB,KAAK,SACLJ,MAAO,mBACPf,UAAW,0EChCpBuB,EAlCD,SAAC,GAA8B,IAAD,IAA5BC,UAAWV,EAAiB,EAAjBA,KAAMW,EAAW,EAAXA,KAE7B,IAAIX,EAAM,OAAO,KACjB,IAAMY,EAAS,OAEf,OACE,qBAAK1B,UAAW,2BAAhB,SACI,sBAAKA,UAAW,aAAhB,UACI,iDAAoBc,EAApB,UACA,oBAAGd,UAAW,cAAd,UACK2B,WAAWF,EAAKG,KAAOF,EAAQ,IAAIG,QAAQ,GAC5C,6CAGJ,wCACGF,WAAWF,EAAKK,SAAWJ,EAAQ,IAAIG,QAAQ,GAChD,6CAGF,wCACGF,WAAWF,EAAKM,SAAWL,EAAQ,IAAIG,QAAQ,GAChD,mDCTDG,EAZD,SAAC,GAAa,IAAZC,EAAW,EAAXA,QACZ,OACI,mBAAGjC,UAAW,qBAAd,SACKiC,KC6EEC,MAzEf,WAGE,IAmCIC,EAnCJ,EAAgC7B,mBAAS,CACvCG,OAAQ,GACRC,KAAM,KAFR,mBAAOP,EAAP,KAAiBC,EAAjB,KAKA,EAAkCE,oBAAS,GAA3C,mBAAO8B,EAAP,KAAkB/B,EAAlB,KAEA,EAAkCC,mBAAS,IAA3C,mBAAOkB,EAAP,KAAkBa,EAAlB,KAEA,EAA0B/B,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEOC,EAAgBN,EAAhBM,OAAQC,EAAQP,EAARO,KAgCf,OA9BA4B,qBAAU,YAEU,uCAAG,gCAAAC,EAAA,0DAChBH,EADgB,uBAEH,mCACRI,EAHW,4DAGgD/B,EAHhD,YAG0DC,EAH1D,kBAEH,oCAFG,SAIO+B,MAAMD,GAJb,cAIXE,EAJW,gBAKMA,EAAUC,OALhB,OAKXC,EALW,OAMjBP,EAAaO,GACQ,QAAlBpB,EAAUqB,IACXrC,GAAS,GAETA,GAAS,GAVM,4CAAH,qDAgBlBsC,GACAzC,GAAa,KACb,CAAC+B,IAKDD,EADC5B,EACW,cAAC,EAAD,CAAO0B,QAAQ,sBAEf,cAAC,EAAD,CAAOT,UAAWA,IAI9B,gCACE,cAAC,EAAD,CACEzB,OAAS,gBAEX,qBAAKC,UAAW,kBAAhB,SACE,qBAAKA,UAAW,YAAhB,SACE,sBAAKA,UAAW,MAAhB,UACE,qBAAKA,UAAW,aAAhB,SACE,cAAC,EAAD,CACEG,SAAWA,EACXC,YAAcA,EACdC,aAAeA,MAInB,qBAAKL,UAAW,aAAhB,SACGmC,eC5DAY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d4c2ac1e.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\n\r\nconst Header = ({titulo}) =>{\r\n    return(\r\n        <nav>\r\n            <div className =\"nav-wrapper light-blue darken-2\">\r\n                <a href=\"!#\" className =\"brand-logo\">{titulo}</a>\r\n\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nHeader.propTypes = {\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;\r\n","import PropTypes from \"prop-types\";\r\nimport { useState } from \"react\";\r\n\r\nconst Formulario = ({busqueda, setBusqueda, setConsultar}) => {\r\n    \r\n    const[error, setError] = useState(false); \r\n\r\n    \r\n    //Destructuring del estado\r\n    const {ciudad, pais} = busqueda;\r\n\r\n\r\n    //Función que actualiza el state\r\n    const handlerChange = e =>\r\n        //Actualizar el estado\r\n        setBusqueda({\r\n            ...busqueda,\r\n            [e.target.name]: e.target.value\r\n        })\r\n\r\n        const handlerSubmit = e=>{\r\n            e.preventDefault();\r\n\r\n            //Validar\r\n            if(ciudad.trim() === \"\" || pais.trim() ===\"\"){\r\n                setError(true);\r\n                return;\r\n            }\r\n            setError(false);\r\n            setConsultar(true);\r\n        }\r\n    \r\n\r\n    return (\r\n        <form onSubmit={handlerSubmit}>\r\n            {error && <p className =\"red darken-4\">*Fill in all the fields</p> }\r\n            <div className =\"input-field col s12\">\r\n                <input \r\n                    type=\"text\" \r\n                    name = \"ciudad\"\r\n                    id = \"ciudad\"\r\n                    value ={ciudad}\r\n                    onChange ={handlerChange}\r\n                />\r\n                <label htmlFor=\"ciudad\">City:</label>\r\n\r\n            </div>\r\n            <div className =\"input-field col s12\">\r\n                <select \r\n                    name=\"pais\" \r\n                    id=\"pais\"\r\n                    value ={pais}\r\n                    onChange ={handlerChange}\r\n                >\r\n                    <option value=\"\">-- Choose a country --</option>\r\n                    <option value=\"US\">United States</option>\r\n                    <option value=\"MX\">Mexico</option>\r\n                    <option value=\"AR\">Argentine</option>\r\n                    <option value=\"CO\">Colombia</option>\r\n                    <option value=\"CR\">Costa Rica</option>\r\n                    <option value=\"ES\">Spain</option>\r\n                    <option value=\"PE\">Perú</option>\r\n\r\n                </select>\r\n                <div className =\"input-field col s12\">\r\n                    <input \r\n                        type=\"submit\"\r\n                        value= \"Look for weather\"\r\n                        className =\"waves-effect waves-light btn-large btn-block yellow accent-4\" \r\n                    \r\n                    />\r\n\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n};\r\n\r\nFormulario.propTypes = {\r\n    busqueda: PropTypes.object.isRequired,\r\n    setBusqueda: PropTypes.func.isRequired,\r\n    setConsultar: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Formulario;","import PropTypes from \"prop-types\";\r\n\r\nconst Clima = ({resultado:{name, main}}) => {\r\n\r\n    if(!name) return null\r\n    const kelvin = 273.15;\r\n\r\n    return (\r\n      <div className =\"card-panel white col s12\">\r\n          <div className =\"black-text\">\r\n              <h2>The weather of {name} is:</h2>\r\n              <p className =\"temperatura\">\r\n                  {parseFloat(main.temp - kelvin, 10).toFixed(2)}\r\n                  <span>&#x2103;</span>\r\n\r\n              </p>\r\n              <p>Maximum\r\n                {parseFloat(main.temp_max - kelvin, 10).toFixed(2)}\r\n                <span>&#x2103;</span>\r\n              </p>\r\n\r\n              <p>Minimum\r\n                {parseFloat(main.temp_min - kelvin, 10).toFixed(2)}\r\n                <span>&#x2103;</span>\r\n              </p>\r\n\r\n          </div>\r\n\r\n      </div> \r\n    );\r\n};\r\n\r\nClima.propTypes = {\r\n    resultado: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Clima;","import PropTypes from \"prop-types\";\r\n\r\nconst Error = ({mensaje})=>{\r\n    return (\r\n        <p className =\"red darken-4 error\">\r\n            {mensaje}\r\n        </p>\r\n    );\r\n};\r\n\r\nError.propTypes = {\r\n    mensaje: PropTypes.element.isRequired\r\n}\r\n\r\nexport default Error;","\nimport { useState} from \"react\";\nimport { useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Formulario from \"./components/Formulario\";\nimport Clima from \"./components/Clima\";\nimport Error from \"./components/Error\";\n\n\nfunction App() {\n\n  //Declaración de estado inicial\n  const [busqueda, setBusqueda] = useState({\n    ciudad: \"\",\n    pais: \"\"\n})\n\n  const [consultar, setConsultar] = useState(false);\n\n  const [resultado, setResultado] = useState({});\n\n  const [error, setError] = useState(false);\n\n  const {ciudad, pais} = busqueda;\n\n  useEffect(()=>{\n    //console.log(ciudad)\n    const consultarApi = async ()=>{\n      if(consultar){\n        const appId = \"13d4a7c9d6a51f577e0c78f4e2a78a29\";\n        const url = `https://api.openweathermap.org/data/2.5/weather?q=${ciudad},${pais}&appid=${appId}`;\n        const respuesta = await fetch(url)\n        const response = await respuesta.json();\n        setResultado(response);\n        if(resultado.cod === \"404\"){\n          setError(true)\n        }else{\n          setError(false)\n        }\n      }\n      \n    }\n\n    consultarApi();\n    setConsultar(false);\n  },[consultar])\n\n  let component;\n\n  if(error){\n    component = <Error mensaje=\"There is not data\"/>\n  }else{\n    component = <Clima resultado={resultado}/>\n  }\n\n  return (\n    <div>\n      <Header \n        titulo = \"Weather app\"\n      /> \n      <div className =\"contenedor-form\">\n        <div className =\"container\">\n          <div className =\"row\">\n            <div className =\"col m6 s12\">\n              <Formulario \n                busqueda ={busqueda}\n                setBusqueda ={setBusqueda}\n                setConsultar ={setConsultar}\n              />\n            </div>\n\n            <div className =\"col m6 s12\">\n              {component}\n            </div>\n\n          </div>\n        </div>\n        </div> \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}